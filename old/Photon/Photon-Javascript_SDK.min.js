var Photon;
(function(g){var a=function(a,c,f){"undefined"===typeof c&&(c="");"undefined"===typeof f&&(f="");this.url=a;this.subprotocol=c;this.keepAliveTimeoutMs=5E3;this._frame="~m~";this._isClosing=this._isConnected=this._isConnecting=!1;this._peerStatusListeners={};this._eventListeners={};this._responseListeners={};this.keepAliveTimer=0;this._logger=new Exitgames.Common.Logger(f&&""!=f?f+": ":"")};a.prototype.isConnecting=function(){return this._isConnecting};a.prototype.isConnected=function(){return this._isConnected};a.prototype.isClosing=
function(){return this._isClosing};a.prototype.connect=function(){var a=this;this._socket=""==this.subprotocol?new WebSocket(this.url):new WebSocket(this.url,this.subprotocol);this._onConnecting();this._socket.onopen=function(){};this._socket.onmessage=function(c){c=a._decode(c.data);a._onMessage(c.toString())};this._socket.onclose=function(c){a._logger.debug("onclose: wasClean =",c.wasClean,", code=",c.code,", reason =",c.reason);a._isConnecting?a._onConnectFailed(c):(1006==c.code&&a._onTimeout(),
a._onDisconnect())};this._socket.onerror=function(c){a._onError(c)}};a.prototype.disconnect=function(){this._isClosing=!0;this._socket.close()};a.prototype.sendOperation=function(a,c){var f={req:a,vals:[]};if(Exitgames.Common.Util.isArray(c))f.vals=c;else if(void 0===c)f.vals=[];else throw Error(this._logger.format("PhotonPeer[sendOperation] - Trying to send non array data:",c));this._send(f);this._logger.debug("PhotonPeer[sendOperation] - Sending request:",f)};a.prototype.addPeerStatusListener=function(a,
c){this._addListener(this._peerStatusListeners,a,c)};a.prototype.addEventListener=function(a,c){this._addListener(this._eventListeners,a.toString(),c)};a.prototype.addResponseListener=function(a,c){this._addListener(this._responseListeners,a.toString(),c)};a.prototype.removePeerStatusListener=function(a,c){this._removeListener(this._peerStatusListeners,a,c)};a.prototype.removeEventListener=function(a,c){this._removeListener(this._eventListeners,a.toString(),c)};a.prototype.removeResponseListener=
function(a,c){this._removeListener(this._responseListeners,a.toString(),c)};a.prototype.removePeerStatusListenersForCode=function(a){this._removeListenersForCode(this._peerStatusListeners,a)};a.prototype.removeEventListenersForCode=function(a){this._removeListenersForCode(this._eventListeners,a.toString())};a.prototype.removeResponseListenersForCode=function(a){this._removeListenersForCode(this._responseListeners,a.toString())};a.prototype.setLogLevel=function(a){this._logger.setLevel(a)};a.prototype.onUnhandledEvent=
function(a){this._logger.warn("PhotonPeer: No handler for event",a,"registered.")};a.prototype.onUnhandledResponse=function(a){this._logger.warn("PhotonPeer: No handler for response",a,"registered.")};a.prototype._dispatchEvent=function(a,c){if(!this._dispatch(this._eventListeners,a.toString(),c,"event"))this.onUnhandledEvent(a,c)};a.prototype._dispatchResponse=function(a,c){if(!this._dispatch(this._responseListeners,a.toString(),c,"response"))this.onUnhandledResponse(a,c)};a.prototype._stringify=
function(a){if("[object Object]"==Object.prototype.toString.call(a)){if(!JSON)throw Error("PhotonPeer[_stringify] - Trying to encode as JSON, but JSON.stringify is missing.");return"~j~"+JSON.stringify(a)}return String(a)};a.prototype._encode=function(a){for(var c="",f,a=Exitgames.Common.Util.isArray(a)?a:[a],b=0,m=a.length;b<m;b++)f=null===a[b]||void 0===a[b]?"":this._stringify(a[b]),c+=this._frame+f.length+this._frame+f;return c};a.prototype._decode=function(a){var c=[],f,b;f=a;-1!==a.indexOf("\x00")&&
(f=a.replace(/[\0]/g,""));a=f;do{if(a.substr(0,3)!==this._frame)break;a=a.substr(3);f="";for(var m=0,g=a.length;m<g;m++)if(b=Number(a.substr(m,1)),a.substr(m,1)==b)f+=b;else{a=a.substr(f.length+this._frame.length);f=Number(f);break}c.push(a.substr(0,f));a=a.substr(f)}while(""!==a);return c};a.prototype._onMessage=function(a){"~j~"==a.substr(0,3)?this._onMessageReceived(JSON.parse(a.substr(3))):this._sessionid?this._onMessageReceived(a):(this._sessionid=a,this._onConnect())};a.prototype.resetKeepAlive=
function(){var a=this;clearTimeout(this.keepAliveTimer);1E3<=this.keepAliveTimeoutMs&&(this.keepAliveTimer=setTimeout(function(){return a._send({irq:1,vals:[1,Date.now()]},!0)},this.keepAliveTimeoutMs))};a.prototype._send=function(a,c){"undefined"===typeof c&&(c=!1);var f=this._encode(a);if(this._isConnected&&!this._isClosing)this.resetKeepAlive(),this._socket.send(f);else if(!c)throw Error(this._logger.format("PhotonPeer[_send] - Operation",a.req,'- failed, "isConnected" is',this._isConnected,', "isClosing" is',
this._isClosing,"!"));};a.prototype._onMessageReceived=function(a){if("object"===typeof a)if(this._logger.debug("PhotonPeer[_onMessageReceived] - Socket received message:",a),a.vals=void 0!==a.vals?a.vals:[],0<a.vals.length&&(a.vals=this._parseMessageValuesArrayToJSON(a.vals)),void 0!==a.res){var c=parseInt(a.res);this._parseResponse(c,a)}else if(void 0!==a.evt)c=parseInt(a.evt),this._parseEvent(c,a);else if(void 0!==a.irs)c=parseInt(a.irs),this._parseInternalResponse(c,a);else throw Error(this._logger.format("PhotonPeer[_onMessageReceived] - Received undefined message type:",
a));};a.prototype._parseMessageValuesArrayToJSON=function(a){var c={};if(Exitgames.Common.Util.isArray(a))if(0==a.length%2)for(var f,b;0<a.length;)f=a.shift()+"",b=a.shift(),c[f]=b;else throw Error(this._logger.format("PhotonPeer[_parseMessageValuesToJSON] - Received invalid values array:",a));return c};a.prototype._parseEvent=function(a,c){switch(a){default:this._dispatchEvent(a,{vals:c.vals})}};a.prototype._parseResponse=function(a,c){switch(a){default:this._dispatchResponse(a,{errCode:c.err,errMsg:c.msg,
vals:c.vals})}};a.prototype._parseInternalResponse=function(a,c){this._logger.debug("internal response:",c)};a.prototype._onConnecting=function(){this._logger.debug("PhotonPeer[_onConnecting] - Starts connecting",this.url,'..., raising "connecting" event ...');this._isConnecting=!0;this._dispatchPeerStatus(a.StatusCodes.connecting)};a.prototype._onConnect=function(){this._logger.debug('PhotonPeer[_onConnect] - Connected successfully! Raising "connect" event ...');this._isConnecting=!1;this._isConnected=
!0;this._dispatchPeerStatus(a.StatusCodes.connect)};a.prototype._onConnectFailed=function(){this._logger.error("PhotonPeer[_onConnectFailed] - Socket connection could not be created:",this.url,this.subprotocol,'Wrong host or port?\n Raising "connectFailed event ...');this._isConnecting=this._isConnected=!1;this._dispatchPeerStatus(a.StatusCodes.connectFailed)};a.prototype._onDisconnect=function(){var i=this._isConnected,c=this._isClosing;this._logger.debug('PhotonPeer[_onDisconnect] - Socket closed, raising "disconnect" event ...');
this._isClosing=this._isConnected=this._isConnecting=!1;i&&(c?this._dispatchPeerStatus(a.StatusCodes.disconnect):this._dispatchPeerStatus(a.StatusCodes.connectClosed))};a.prototype._onTimeout=function(){this._logger.debug('PhotonPeer[_onTimeout] - Client timed out! Raising "timeout" event ...');this._dispatchPeerStatus(a.StatusCodes.timeout)};a.prototype._onError=function(i){this._logger.error("PhotonPeer[_onError] - Connection error:",i);this._isConnecting=this._isConnected=this._isClosing=!1;this._dispatchPeerStatus(a.StatusCodes.error)};
a.prototype._addListener=function(a,c,f){c in a||(a[c]=[]);f&&"function"===typeof f?(this._logger.debug("PhotonPeer[_addListener] - Adding listener for event",c),a[c].push(f)):this._logger.error("PhotonPeer[_addListener] - Listener",c,"is not a function but of type",typeof f,". No listener added!");return this};a.prototype._dispatch=function(a,c,f){if(c in a){for(var a=a[c],c=0,b=a.length;c<b;c++)Exitgames.Common.Util.isArray(f)||(f=[f]),a[c].apply(this,void 0===f?[]:f);return!0}return!1};a.prototype._dispatchPeerStatus=
function(a){this._dispatch(this._peerStatusListeners,a,void 0,"peerStatus")||this._logger.warn("PhotonPeer[_dispatchPeerStatus] - No handler for ",a,"registered.")};a.prototype._removeListener=function(a,c,f){if(c in a){var b=a[c].length;a[c]=a[c].filter(function(a){return a!=f});this._logger.debug("PhotonPeer[_removeListener] - Removing listener for event",c,"removed:",b-a[c].length)}return this};a.prototype._removeListenersForCode=function(a,c){this._logger.debug("PhotonPeer[_removeListenersForCode] - Removing all listeners for event",
c);c in a&&(a[c]=[]);return this};a.StatusCodes={connecting:"connecting",connect:"connect",connectFailed:"connectFailed",disconnect:"disconnect",connectClosed:"connectClosed",error:"error",timeout:"timeout"};g.PhotonPeer=a})(Photon||(Photon={}));var Exitgames;
(function(g){var g=g.Common||(g.Common={}),a=function(c,f){"undefined"===typeof c&&(c="");"undefined"===typeof f&&(f=a.Level.INFO);this.prefix=c;this.level=f};a.prototype.setLevel=function(c){c=Math.max(c,a.Level.DEBUG);this.level=c=Math.min(c,a.Level.OFF)};a.prototype.isLevelEnabled=function(a){return a>=this.level};a.prototype.getLevel=function(){return this.level};a.prototype.debug=function(c){for(var f=[],b=0;b<arguments.length-1;b++)f[b]=arguments[b+1];this.log(a.Level.DEBUG,c,f)};a.prototype.info=
function(c){for(var f=[],b=0;b<arguments.length-1;b++)f[b]=arguments[b+1];this.log(a.Level.INFO,c,f)};a.prototype.warn=function(c){for(var f=[],b=0;b<arguments.length-1;b++)f[b]=arguments[b+1];this.log(a.Level.WARN,c,f)};a.prototype.error=function(c){for(var f=[],b=0;b<arguments.length-1;b++)f[b]=arguments[b+1];this.log(a.Level.ERROR,c,f)};a.prototype.format=function(a){for(var f=[],b=0;b<arguments.length-1;b++)f[b]=arguments[b+1];return this.format0(a,f)};a.prototype.formatArr=function(a,f){return this.format0(a,
f)};a.prototype.log=function(c,f,b){if(c>=this.level&&"undefined"!==typeof console&&void 0!==f)try{var m=console[a.log_types[c]];m||(m=console.log);m&&(m.call?m.call(console,this.format0(f,b)):m(console,this.format0(f,b)))}catch(g){}};a.prototype.format0=function(a,f){return this.prefix+a+" "+f.map(function(a){if(void 0!==a)switch(typeof a){case "object":try{return JSON.stringify(a)}catch(c){return a.toString()+"("+c+")"}default:return a.toString()}}).join(" ")};a.Level={DEBUG:1,INFO:2,WARN:3,ERROR:4,
OFF:6};a.log_types=["debug","debug","info","warn","error"];g.Logger=a;var i=function(){};i.indexOf=function(a,f,b){for(var g=a.length,b=0>b?Math.max(0,g+b):b||0;b<g;b++)if(a[b]===f)return b;return-1};i.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)};i.merge=function(a,f){for(var b in f)f.hasOwnProperty(b)&&(a[b]=f[b])};i.getPropertyOrElse=function(a,f,b){return a.hasOwnProperty(f)?a[f]:b};i.enumValueToName=function(a,f){for(var b in a)if(f==a[b])return b;return"undefined"};
g.Util=i})(Exitgames||(Exitgames={}));
(function(g){g=g.Lite||(g.Lite={});g=g.Constants||(g.Constants={});g.LiteOpKey={ActorList:252,ActorNr:254,ActorProperties:249,Add:238,Broadcast:250,Cache:247,Code:244,Data:245,GameId:255,GameProperties:248,Group:240,Properties:251,ReceiverGroup:246,Remove:239,TargetActorNr:253,EmptyRoomLiveTime:236};g.LiteEventCode={Join:255,Leave:254,PropertiesChanged:253};g.LiteOpCode={ChangeGroups:248,GetProperties:251,Join:255,Leave:254,RaiseEvent:253,SetProperties:252}})(Photon||(Photon={}));
var __extends=this.__extends||function(g,a){function i(){this.constructor=g}for(var c in a)a.hasOwnProperty(c)&&(g[c]=a[c]);i.prototype=a.prototype;g.prototype=new i};
(function(g){var a=g.Lite||(g.Lite={}),i=g.PhotonPeer,c=function(a,b){"undefined"===typeof b&&(b="");i.call(this,a,b);this.isJoined=!1;this.roomName="";this.room={properties:{}};this.actors={};this._myActor={photonId:0,properties:{}}};__extends(c,i);c.prototype.myActor=function(){return this._myActor};c.prototype.join=function(f,b,c,g){if(void 0!==f&&this.isConnected()&&!this.isJoined){this._logger.info("PhotonPeer.Lite[join] - Joining roomName:",f);this._logger.debug("PhotonPeer.Lite[join] - actorProperties:",
c,", roomProperties:",b,", broadcast:",g);var i=[];i.push(a.Constants.LiteOpKey.GameId);i.push(f+"");"object"===typeof b&&(i.push(a.Constants.LiteOpKey.GameProperties),i.push(b));"object"===typeof c&&(i.push(a.Constants.LiteOpKey.ActorProperties),i.push(c));i.push(a.Constants.LiteOpKey.Broadcast);i.push(g||!1);this.sendOperation(a.Constants.LiteOpCode.Join,i)}else{if(void 0===f)throw Error("PhotonPeer.Lite[join] - Trying to join with undefined roomName!");if(this.isJoined)throw Error("PhotonPeer.Lite[join] - you have already joined!");
throw Error("PhotonPeer.Lite[join] - Not connected!");}};c.prototype.leave=function(){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[leave] - Leaving ..."),this.sendOperation(a.Constants.LiteOpCode.Leave);else throw Error("PhotonPeer.Lite[leave] - Not joined!");};c.prototype.raiseEvent=function(c,b){if(this.isJoined)if(void 0!==b)this._logger.debug("PhotonPeer.Lite[raiseEvent] - Event",c,":",b),this.sendOperation(a.Constants.LiteOpCode.RaiseEvent,[a.Constants.LiteOpKey.Code,c,a.Constants.LiteOpKey.Data,
b]);else throw Error(this._logger.format("PhotonPeer.Lite[raiseEvent] - Event",c,"- data not passed in as object!"));else throw Error("PhotonPeer.Lite[raiseEvent] - Not joined!");};c.prototype.setActorProperties=function(c,b,g){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[setActorProperties] - actorNumber:"+c+", broadcast:"+g+", data:",b),this.sendOperation(a.Constants.LiteOpCode.SetProperties,[a.Constants.LiteOpKey.Broadcast,g,a.Constants.LiteOpKey.Properties,b,a.Constants.LiteOpKey.ActorNr,
c]);else throw Error("PhotonPeer.Lite[setActorProperties] - Not joined!");};c.prototype.getActorProperties=function(c,b){if(this.isJoined){var g=[];g.push(a.Constants.LiteOpKey.ActorProperties);void 0!==c&&Exitgames.Common.Util.isArray(c)&&0<c.length&&g.push(c);2!==g.length&&g.push(null);g.push(a.Constants.LiteOpKey.ActorList);void 0!==b&&Exitgames.Common.Util.isArray(b)&&0<b.length&&g.push(b);4!==g.length&&g.push(null);g.push(a.Constants.LiteOpKey.Properties);g.push(2);this._logger.debug("PhotonPeer.Lite[getActorProperties] -",
g);this.sendOperation(a.Constants.LiteOpCode.GetProperties,g)}else throw Error("PhotonPeer.Lite[getProperties] - Not joined!");};c.prototype.setRoomProperties=function(c,b){if(this.isJoined)this._logger.debug("PhotonPeer.Lite[setRoomProperties] - broadcast:"+b+", data:",c),this.sendOperation(a.Constants.LiteOpCode.SetProperties,[a.Constants.LiteOpKey.Broadcast,b,a.Constants.LiteOpKey.Properties,c]);else throw Error("PhotonPeer.Lite[setRoomProperties] - Not joined!");};c.prototype.getRoomProperties=
function(c){if(this.isJoined){var b=[];b.push(a.Constants.LiteOpKey.GameProperties);void 0!==c?Exitgames.Common.Util.isArray(c)&&0<c.length&&b.push(c):b.push(null);this._logger.debug("PhotonPeer.Lite[getRoomProperties] -",b);this.sendOperation(a.Constants.LiteOpCode.GetProperties,b)}else throw Error("PhotonPeer.Lite[getRoomProperties] - Not joined!");};c.prototype._addActor=function(a){this.actors[a]={photonId:a};this._logger.debug("PhotonPeer.Lite[_addActor] - Added actorNr",a,"actors known are now ",
this.actors);return this.actors[a]};c.prototype._removeActor=function(a){delete this.actors[a];this._logger.debug("PhotonPeer.Lite[_removeActor] - Removed actorNr",a,", actors known are now",this.actors);return this};c.prototype.actorNrFromVals=function(a){a=a[g.Lite.Constants.LiteOpKey.ActorNr];return void 0!==a?parseInt(a):-1};c.prototype._parseEvent=function(c,b){var g=this.actorNrFromVals(b.vals);switch(c){case a.Constants.LiteEventCode.Join:this._onEventJoin(b,g);break;case a.Constants.LiteEventCode.Leave:this._onEventLeave(g);
break;case a.Constants.LiteEventCode.PropertiesChanged:this._onEventSetProperties(b,g);break;default:this._logger.info("PhotonPeer.Lite[_parseEvent] - Unknown event code",c,"with JSON:",b),this._dispatchEvent(c,{vals:b.vals,actorNr:g})}};c.prototype._onEventJoin=function(c,b){if(b!==this._myActor.photonId)this._logger.debug("PhotonPeer.Lite[_onEventJoin] - ActorNr",b,"joined."),this._addActor(b),this._dispatchEvent(a.Constants.LiteEventCode.Join,{newActors:[b]});else{var g=c.vals[a.Constants.LiteOpKey.ActorList],
i=[],l;for(l in g)b=parseInt(g[l]),b!==this._myActor.photonId&&void 0===this.actors[b]&&(this._logger.debug("PhotonPeer.Lite[_onEventJoin] - ActorNr",b,"registered as already joined"),this._addActor(b),i.push(b));this._dispatchEvent(a.Constants.LiteEventCode.Join,{newActors:i})}};c.prototype._onEventLeave=function(c){this._logger.debug("PhotonPeer.Lite[_onEventLeave] - ActorNr",c,"left");this._removeActor(c);this._dispatchEvent(a.Constants.LiteEventCode.Leave,{actorNr:c})};c.prototype._onEventSetProperties=
function(){};c.prototype._parseResponse=function(c,b){var g=this.actorNrFromVals(b.vals);switch(c){case a.Constants.LiteOpCode.Join:this._onResponseJoin(g);break;case a.Constants.LiteOpCode.Leave:this._onResponseLeave(g);break;case a.Constants.LiteOpCode.RaiseEvent:break;case a.Constants.LiteOpCode.GetProperties:this._onResponseGetProperties(b);break;case a.Constants.LiteOpCode.SetProperties:this._onResponseSetProperties(b,g);break;default:this._logger.debug("PhotonPeer.Lite[_parseResponse] - Unknown response code",
c,b,"actorNr",g),this._dispatchResponse(c,{errCode:b.err,errMsg:b.msg,vals:b.vals,actorNr:g})}};c.prototype._onResponseGetProperties=function(c){this._logger.debug("PhotonPeer.Lite[_onResponseGetProperties] - getProperties response:",c);if(void 0!==c.vals[a.Constants.LiteOpKey.ActorProperties]){var b=c.vals[a.Constants.LiteOpKey.ActorProperties],g;for(g in b)this.actors[g].properties=b[g]}void 0!==c.vals[a.Constants.LiteOpKey.GameProperties]&&(this.room.properties=c.vals[a.Constants.LiteOpKey.GameProperties]);
this._dispatchResponse(a.Constants.LiteOpCode.GetProperties,{vals:c.vals})};c.prototype._onResponseJoin=function(c){this.isJoined=!0;"object"===typeof this._myActor&&(this._myActor=this._addActor(c),this._logger.debug("PhotonPeer.Lite[_onResponseJoin] - You joined as actor number / myActor.photonId has been set to:",this._myActor.photonId));this._dispatchResponse(a.Constants.LiteOpCode.Join,{actorNr:c})};c.prototype._onResponseLeave=function(c){this.isJoined=!1;this._removeActor(this._myActor.photonId);
this._logger.debug("PhotonPeer.Lite[_onResponseLeave] - You left the room",this.roomName);this.roomName="";this.room={properties:{}};this._dispatchResponse(a.Constants.LiteOpCode.Leave,{actorNr:c})};c.prototype._onResponseSetProperties=function(c,b){this._logger.debug("PhotonPeer.Lite[_onResponseSetProperties] - setProperties response:",c,"actorNr",b);this._dispatchResponse(a.Constants.LiteOpCode.SetProperties,{vals:c.vals,actorNr:b})};a.LitePeer=c})(Photon||(Photon={}));
(function(g){var a=g.LoadBalancing||(g.LoadBalancing={}),a=a.Constants||(a.Constants={}),i=g.Lite.Constants.LiteOpKey,c=g.Lite.Constants.LiteOpCode,g=g.Lite.Constants.LiteEventCode;a.ErrorCode={Ok:0,OperationNotAllowedInCurrentState:-3,InvalidOperationCode:-2,InternalServerError:-1,InvalidAuthentication:32767,GameIdAlreadyExists:32766,GameFull:32765,GameClosed:32764,NoRandomMatchFound:32760,GameDoesNotExist:32758,MaxCcuReached:32757,InvalidRegion:32756};a.ActorProperties={PlayerName:255};a.GameProperties=
{MaxPlayers:255,IsVisible:254,IsOpen:253,PlayerCount:252,Removed:251,PropsListedInLobby:250,CleanupCacheOnLeave:249};a.EventCode={GameList:230,GameListUpdate:229,QueueState:228,AppStats:226,AzureNodeInfo:210,Join:g.Join,Leave:g.Leave,PropertiesChanged:g.PropertiesChanged,LobbyStats:224};a.ParameterCode={Address:230,PeerCount:229,GameCount:228,MasterPeerCount:227,UserId:225,ApplicationId:224,Position:223,MatchMakingType:223,GameList:222,Secret:221,AppVersion:220,AzureNodeInfo:210,AzureLocalNodeId:209,
AzureMasterNodeId:208,RoomName:i.GameId,Broadcast:i.Broadcast,ActorList:i.ActorList,ActorNr:i.ActorNr,PlayerProperties:i.ActorProperties,CustomEventContent:i.Data,Data:i.Data,Code:i.Code,GameProperties:i.GameProperties,Properties:i.Properties,TargetActorNr:i.TargetActorNr,ReceiverGroup:i.ReceiverGroup,Cache:i.Cache,CleanupCacheOnLeave:241,Group:i.Group,Remove:i.Remove,Add:i.Add,EmptyRoomLiveTime:i.EmptyRoomLiveTime,ClientAuthenticationType:217,ClientAuthenticationParams:216,CreateIfNotExists:215,
FindFriendsRequestList:1,FindFriendsResponseOnlineList:1,FindFriendsResponseRoomIdList:2,LobbyName:213,LobbyType:212,LobbyStats:211};a.OperationCode={Authenticate:230,JoinLobby:229,LeaveLobby:228,CreateGame:227,JoinGame:226,JoinRandomGame:225,Leave:c.Leave,RaiseEvent:c.RaiseEvent,SetProperties:c.SetProperties,GetProperties:c.GetProperties,ChangeGroups:c.ChangeGroups,FindFriends:222,LobbyStats:221};a.MatchmakingMode={FillRoom:0,SerialMatching:1,RandomMatching:2};a.EventCaching={DoNotCache:0,MergeCache:1,
ReplaceCache:2,RemoveCache:3,AddToRoomCache:4,AddToRoomCacheGlobal:5,RemoveFromRoomCache:6,RemoveFromRoomCacheForActorsLeft:7};a.ReceiverGroup={Others:0,All:1,MasterClient:2};a.CustomAuthenticationType={Custom:0,Steam:1,Facebook:2,None:255};a.LobbyType={Default:1,SqlLobby:2}})(Photon||(Photon={}));
(function(g){var a=g.LoadBalancing||(g.LoadBalancing={}),i=function(a,d,e){this.name=a;this.actorNr=d;this.isLocal=e;this.customProperties={}};i.prototype.getRoom=function(){return this.loadBalancingClient.myRoom()};i.prototype.raiseEvent=function(a,d,e){this.loadBalancingClient&&this.loadBalancingClient.raiseEvent(a,d,e)};i.prototype.setName=function(a){this.name=a};i.prototype.onPropertiesChange=function(){};i.prototype.getCustomProperty=function(a){return this.customProperties[a]};i.prototype.getCustomPropertyOrElse=
function(a,d){return Exitgames.Common.Util.getPropertyOrElse(this.customProperties,a,d)};i.prototype.setCustomProperty=function(a,d){this.customProperties[a]=d;if(this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()){var e={};e[a]=d;this.loadBalancingClient._setPropertiesOfActor(e);this.onPropertiesChange(e,!0)}};i.prototype.getJoinToken=function(){return this.joinToken};i.prototype._getAllProperties=function(){var h={};h[a.Constants.ActorProperties.PlayerName]=this.name;for(var d in this.customProperties)h[d]=
this.customProperties[d];return h};i.prototype._setLBC=function(a){this.loadBalancingClient=a};i.prototype._updateFromResponse=function(h){this.actorNr=h[a.Constants.ParameterCode.ActorNr];h=h[a.Constants.ParameterCode.PlayerProperties];if(void 0!==h){var d=h[a.Constants.ActorProperties.PlayerName];void 0!==d&&(this.name=d);this._updateCustomProperties(h)}};i.prototype._updateMyActorFromResponse=function(h){this.joinToken=(this.actorNr=h[a.Constants.ParameterCode.ActorNr])?this.actorNr.toString():
null};i.prototype._updateCustomProperties=function(a){for(var d in a)this.customProperties[d]=a[d];this.onPropertiesChange(a,!1)};i._getActorNrFromResponse=function(h){return h[a.Constants.ParameterCode.ActorNr]};a.Actor=i;var c=function(a){this.address=this.name="";this.maxPlayers=0;this.isOpen=this.isVisible=!0;this.emptyRoomLiveTime=this.playerCount=0;this.cleanupCacheOnLeave=this.removed=!1;this._customProperties={};this._propsListedInLobby=[];this.name=a};c.prototype.onPropertiesChange=function(){};
c.prototype.getCustomProperty=function(a){return this._customProperties[a]};c.prototype.getCustomPropertyOrElse=function(a,d){return Exitgames.Common.Util.getPropertyOrElse(this._customProperties,a,d)};c.prototype._updateFromMasterResponse=function(h){this.address=h[a.Constants.ParameterCode.Address];if(h=h[a.Constants.ParameterCode.RoomName])this.name=h};c.prototype._updateFromProps=function(h,d){"undefined"===typeof d&&(d=null);if(h){this.maxPlayers=this.updateIfExists(this.maxPlayers,a.Constants.GameProperties.MaxPlayers,
h);this.isVisible=this.updateIfExists(this.isVisible,a.Constants.GameProperties.IsVisible,h);this.isOpen=this.updateIfExists(this.isOpen,a.Constants.GameProperties.IsOpen,h);this.playerCount=this.updateIfExists(this.playerCount,a.Constants.GameProperties.PlayerCount,h);this.removed=this.updateIfExists(this.removed,a.Constants.GameProperties.Removed,h);this._propsListedInLobby=this.updateIfExists(this._propsListedInLobby,a.Constants.GameProperties.PropsListedInLobby,h);this.cleanupCacheOnLeave=this.updateIfExists(this.cleanupCacheOnLeave,
a.Constants.GameProperties.CleanupCacheOnLeave,h);var e={};null===d&&(d=h);for(var b in d)parseInt(b).toString()!=b&&this._customProperties[b]!==d[b]&&(this._customProperties[b]=d[b],e[b]=d[b]);this.onPropertiesChange(e,!1)}};c.prototype.updateIfExists=function(a,d,e){return e.hasOwnProperty(d)?e[d]:a};a.RoomInfo=c;var f=function(a){c.call(this,a)};__extends(f,c);f.prototype.setCustomProperty=function(a,d){this._customProperties[a]=d;if(this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()){var e=
{};e[a]=d;this.loadBalancingClient._setPropertiesOfRoom(e)}e={};e[a]=d;this.onPropertiesChange(e,!0)};f.prototype.setProp=function(a,d){if(this.loadBalancingClient&&this.loadBalancingClient.isJoinedToRoom()){var e={};e[a]=d;this.loadBalancingClient._setPropertiesOfRoom(e)}};f.prototype.setIsVisible=function(h){this.isVisible!=h&&(this.isVisible=h,this.setProp(a.Constants.GameProperties.IsVisible,h))};f.prototype.setIsOpen=function(h){this.isOpen==!h&&(this.isOpen=h,this.setProp(a.Constants.GameProperties.IsOpen,
h))};f.prototype.setMaxPlayers=function(h){this.maxPlayers!=h&&(this.maxPlayers=h,this.setProp(a.Constants.GameProperties.MaxPlayers,h))};f.prototype.setEmptyRoomLiveTime=function(a){this.emptyRoomLiveTime=a};f.prototype.setPropsListedInLobby=function(a){this._propsListedInLobby=a};f.prototype._setLBC=function(a){this.loadBalancingClient=a};a.Room=f;var b=function(h,d,e){this.masterServerAddress=h;this.appId=d;this.appVersion=e;this.connectOptions={};this.createRoomOptions={};this.joinRoomOptions=
{};this.reconnectPending=!1;this.roomInfos=[];this.actors={};this.userAuthType=a.Constants.CustomAuthenticationType.None;this.userAuthSecret=this.userAuthParameters="";this.lobbyStatsRequestList=[];this.state=b.State.Uninitialized;this.logger=new Exitgames.Common.Logger("LoadBalancingClient");this.validNextState={};this.initValidNextState();this.currentRoom=this.roomFactoryInternal("");this._myActor=this.actorFactoryInternal("",-1,!0);this.addActor(this._myActor)};b.prototype.onStateChange=function(){};
b.prototype.onError=function(a,d){this.logger.error("Load Balancing Client Error",a,d)};b.prototype.onOperationResponse=function(){};b.prototype.onEvent=function(){};b.prototype.onRoomList=function(){};b.prototype.onRoomListUpdate=function(){};b.prototype.onMyRoomPropertiesChange=function(){};b.prototype.onActorPropertiesChange=function(){};b.prototype.onJoinRoom=function(){};b.prototype.onActorJoin=function(){};b.prototype.onActorLeave=function(){};b.prototype.onFindFriendsResult=function(){};b.prototype.onLobbyStats=
function(){};b.prototype.onAppStats=function(){};b.prototype.roomFactory=function(a){return new f(a)};b.prototype.actorFactory=function(a,d,e){return new i(a,d,e)};b.prototype.myActor=function(){return this._myActor};b.prototype.myRoom=function(){return this.currentRoom};b.prototype.myRoomActors=function(){return this.actors};b.prototype.roomFactoryInternal=function(a){"undefined"===typeof a&&(a="");a=this.roomFactory(a);a._setLBC(this);return a};b.prototype.actorFactoryInternal=function(a,d,e){"undefined"===
typeof a&&(a="");"undefined"===typeof d&&(d=-1);"undefined"===typeof e&&(e=!1);a=this.actorFactory(a,d,e);a._setLBC(this);return a};b.prototype.setCustomAuthentication=function(a,d){"undefined"===typeof d&&(d=g.LoadBalancing.Constants.CustomAuthenticationType.Custom);this.userAuthType=d;this.userAuthParameters=a};b.prototype.connect=function(a){"boolean"===typeof a&&(a=a?{keepMasterConnection:!0}:{keepMasterConnection:!1});a||(a={});this.reconnectPending=!1;if(this.checkNextState(b.State.ConnectingToMasterserver)){this.changeState(b.State.ConnectingToMasterserver);
this.logger.info("Connecting to Master",this.masterServerAddress);this.connectOptions={};for(var d in a)this.connectOptions[d]=a[d];this.masterPeer=new m(this,"ws://"+this.masterServerAddress,"");this.initMasterPeer(this.masterPeer);this.masterPeer.connect();return!0}return!1};b.prototype.createRoomFromMy=function(a,d){this.currentRoom.name=a?a:"";return this.createRoomInternal(this.masterPeer,d)};b.prototype.createRoom=function(a,d){this.currentRoom=this.roomFactoryInternal(a?a:"");d&&(void 0!==
d.isVisible&&(this.currentRoom.isVisible=d.isVisible),void 0!==d.isOpen&&(this.currentRoom.isOpen=d.isOpen),void 0!==d.maxPlayers&&(this.currentRoom.maxPlayers=d.maxPlayers),void 0!==d.customGameProperties&&(this.currentRoom._customProperties=d.customGameProperties),void 0!==d.propsListedInLobby&&(this.currentRoom._propsListedInLobby=d.propsListedInLobby),void 0!==d.emptyRoomLiveTime&&(this.currentRoom.emptyRoomLiveTime=d.emptyRoomLiveTime));this.currentRoom.onPropertiesChange(this.currentRoom._customProperties,
!0);return this.createRoomInternal(this.masterPeer,d)};b.prototype.joinRoom=function(h,d){var e=[];d&&(d.createIfNotExists&&(e.push(a.Constants.ParameterCode.CreateIfNotExists),e.push(!0)),d.lobbyName&&(e.push(a.Constants.ParameterCode.LobbyName),e.push(d.lobbyName),void 0!=d.lobbyType&&(e.push(a.Constants.ParameterCode.LobbyType),e.push(d.lobbyType))));this.currentRoom=this.roomFactoryInternal(h);e.push(a.Constants.ParameterCode.RoomName);e.push(h);this.joinRoomOptions={joinToken:d&&d.joinToken,
createIfNotExists:d&&d.createIfNotExists};this.logger.info("Join Room",h,d&&d.lobbyName,d&&d.lobbyType,"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinGame,e);return!0};b.prototype.joinRandomRoom=function(h){var d=[];if(h){void 0!=h.matchingType&&h.matchingType!=a.Constants.MatchmakingMode.FillRoom&&(d.push(a.Constants.ParameterCode.MatchMakingType),d.push(h.matchingType));var e={},b=!1;if(void 0!=h.expectedCustomRoomProperties)for(var c in h.expectedCustomRoomProperties)e[c]=h.expectedCustomRoomProperties[c],
b=!0;void 0!=h.expectedMaxPlayers&&0<h.expectedMaxPlayers&&(e[a.Constants.GameProperties.MaxPlayers]=h.expectedMaxPlayers,b=!0);b&&(d.push(a.Constants.ParameterCode.GameProperties),d.push(e));h.lobbyName&&(d.push(a.Constants.ParameterCode.LobbyName),d.push(h.lobbyName),void 0!=h.lobbyType&&(d.push(a.Constants.ParameterCode.LobbyType),d.push(h.lobbyType)));h.sqlLobbyFilter&&(d.push(a.Constants.ParameterCode.Data),d.push(h.sqlLobbyFilter))}this.logger.info("Join Random Room",h&&h.lobbyName,h&&h.lobbyType,
"...");this.masterPeer.sendOperation(a.Constants.OperationCode.JoinRandomGame,d);return!0};b.prototype._setPropertiesOfRoom=function(b){var d=[];d.push(a.Constants.ParameterCode.Properties);d.push(b);d.push(a.Constants.ParameterCode.Broadcast);d.push(!0);this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,d)};b.prototype._setPropertiesOfActor=function(b){var d=[];d.push(a.Constants.ParameterCode.ActorNr);d.push(this.myActor().actorNr);d.push(a.Constants.ParameterCode.Properties);d.push(b);
d.push(a.Constants.ParameterCode.Broadcast);d.push(!0);this.gamePeer.sendOperation(a.Constants.OperationCode.SetProperties,d)};b.prototype.disconnect=function(){this.state!=b.State.Uninitialized&&(this.masterPeer&&this.masterPeer.disconnect(),this.gamePeer&&this.gamePeer.disconnect(),this.changeState(b.State.Disconnecting))};b.prototype.leaveRoom=function(){this.isJoinedToRoom()&&(this.gamePeer&&(this.reconnectPending=!0,this.gamePeer.disconnect()),this.changeState(b.State.Disconnecting))};b.prototype.raiseEvent=
function(a,d,e){this.isJoinedToRoom()&&this.gamePeer.raiseEvent(a,d,e)};b.prototype.changeGroups=function(a,d){this.isJoinedToRoom()&&(this.logger.debug("Group change:",a,d),this.gamePeer.changeGroups(a,d))};b.prototype.findFriends=function(a){if(this.isConnectedToMaster())if(a&&"object"==typeof a){this.findFriendsRequestList=[];for(var d=0;d<a.length;++d)if("string"==typeof a[d])this.findFriendsRequestList[d]=a[d];else{this.logger.error("FindFriends request error:","Friend name is not a string",
d);this.onFindFriendsResult(1101,"Friend name is not a string "+d,{});return}this.logger.debug("Find friends:",a);this.masterPeer.findFriends(this.findFriendsRequestList)}else this.logger.error("FindFriends request error:","Parameter is not an array"),this.onFindFriendsResult(1101,"Parameter is not an array",{});else this.logger.error("FindFriends request error:","Not connected to Master"),this.onFindFriendsResult(1001,"Not connected to Master",{})};b.prototype.requestLobbyStats=function(b){if(this.isConnectedToMaster()){this.lobbyStatsRequestList=
[];if(b)if("object"==typeof b)for(var d=0;d<b.length;++d){var e=b[d];if("object"==typeof e){var c=e[0];if(c){if(void 0===e[1])e=a.Constants.LobbyType.Default;else if("number"==typeof e[1])e=e[1];else{this.requestLobbyStatsErr("Lobby type is invalid",d);return}this.lobbyStatsRequestList[d]=[c.toString(),e]}else{this.requestLobbyStatsErr("Lobby name is empty",d);return}}else{this.requestLobbyStatsErr("Lobby id is not an array",d);return}}else{this.requestLobbyStatsErr("Parameter is not an array");return}this.masterPeer.requestLobbyStats(this.lobbyStatsRequestList)}else this.logger.error("LobbyState request error:",
"Not connected to Master"),this.onLobbyStats(1001,"Not connected to Master",[])};b.prototype.requestLobbyStatsErr=function(a,d){"undefined"===typeof d&&(d="");this.logger.error("LobbyState request error:",a,d);this.onLobbyStats(1101,a+" "+d,[])};b.prototype.isConnectedToMaster=function(){return this.masterPeer&&this.masterPeer.isConnected()};b.prototype.isInLobby=function(){return this.state==b.State.JoinedLobby};b.prototype.isJoinedToRoom=function(){return this.state==b.State.Joined};b.prototype.isConnectedToGame=
function(){return this.isJoinedToRoom()};b.prototype.availableRooms=function(){return this.roomInfos};b.prototype.setLogLevel=function(a){this.logger.setLevel(a);this.masterPeer&&this.masterPeer.setLogLevel(a);this.gamePeer&&this.gamePeer.setLogLevel(a)};b.prototype.addActor=function(a){this.actors[a.actorNr]=a};b.prototype.changeState=function(a){this.logger.info("State:",b.StateToName(this.state),"->",b.StateToName(a));this.state=a;this.onStateChange(a)};b.prototype.createRoomInternal=function(b,
d){var e={};e[a.Constants.GameProperties.IsOpen]=this.currentRoom.isOpen;e[a.Constants.GameProperties.IsVisible]=this.currentRoom.isVisible;0<this.currentRoom.maxPlayers&&(e[a.Constants.GameProperties.MaxPlayers]=this.currentRoom.maxPlayers);this.currentRoom._propsListedInLobby&&0<this.currentRoom._propsListedInLobby.length&&(e[a.Constants.GameProperties.PropsListedInLobby]=this.currentRoom._propsListedInLobby);for(var c in this.currentRoom._customProperties)e[c]=this.currentRoom._customProperties[c];
c=[];this.currentRoom.name&&(c.push(a.Constants.ParameterCode.RoomName),c.push(this.currentRoom.name));c.push(a.Constants.ParameterCode.GameProperties);c.push(e);c.push(a.Constants.ParameterCode.CleanupCacheOnLeave);c.push(!0);c.push(a.Constants.ParameterCode.Broadcast);c.push(!0);0!=this.currentRoom.emptyRoomLiveTime&&(c.push(a.Constants.ParameterCode.EmptyRoomLiveTime),c.push(this.currentRoom.emptyRoomLiveTime));d&&d.lobbyName&&(c.push(a.Constants.ParameterCode.LobbyName),c.push(d.lobbyName),void 0!=
d.lobbyType&&(c.push(a.Constants.ParameterCode.LobbyType),c.push(d.lobbyType)));b===this.masterPeer&&(this.createRoomOptions=d);b===this.gamePeer&&(c.push(a.Constants.ParameterCode.PlayerProperties),c.push(this._myActor._getAllProperties()));(b==this.gamePeer?this.gamePeer._logger:this.masterPeer._logger).info("Create Room",d&&d.lobbyName,d&&d.lobbyType,"...");b.sendOperation(a.Constants.OperationCode.CreateGame,c)};b.prototype.initMasterPeer=function(h){var d=this;h.setLogLevel(this.logger.getLevel());
h.addPeerStatusListener(g.PhotonPeer.StatusCodes.error,function(){d.changeState(b.State.Error);d.onError(b.PeerErrorCode.MasterError,"Master peer error")});h.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectFailed,function(){d.changeState(b.State.Error);d.onError(b.PeerErrorCode.MasterConnectFailed,"Master peer connect failed: "+d.masterServerAddress)});h.addPeerStatusListener(g.PhotonPeer.StatusCodes.timeout,function(){d.changeState(b.State.Error);d.onError(b.PeerErrorCode.MasterTimeout,"Master peer error timeout")});
h.addPeerStatusListener(g.PhotonPeer.StatusCodes.connecting,function(){});h.addPeerStatusListener(g.PhotonPeer.StatusCodes.connect,function(){h._logger.info("Connected");var e=[];e.push(a.Constants.ParameterCode.ApplicationId);e.push(d.appId);e.push(a.Constants.ParameterCode.AppVersion);e.push(d.appVersion);d.userAuthType!=a.Constants.CustomAuthenticationType.None&&(e.push(a.Constants.ParameterCode.ClientAuthenticationType),e.push(d.userAuthType),e.push(a.Constants.ParameterCode.ClientAuthenticationParams),
e.push(d.userAuthParameters));d._myActor.name&&(e.push(a.Constants.ParameterCode.UserId),e.push(d._myActor.name));d.connectOptions.lobbyStats&&(e.push(a.Constants.ParameterCode.LobbyStats),e.push(!0));h.sendOperation(a.Constants.OperationCode.Authenticate,e);h._logger.info("Authenticate...")});h.addPeerStatusListener(g.PhotonPeer.StatusCodes.disconnect,function(){h._logger.info("Disconnected")});h.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectClosed,function(){h._logger.info("Server closed connection");
d.changeState(b.State.Error);d.onError(b.PeerErrorCode.MasterConnectClosed,"Master server closed connection")});h.addEventListener(a.Constants.EventCode.GameList,function(e){e=e.vals[a.Constants.ParameterCode.GameList];d.roomInfos=[];for(var b in e){var f=new c(b);f._updateFromProps(e[b]);d.roomInfos.push(f)}d.onRoomList(d.roomInfos);h._logger.debug("ev GameList",d.roomInfos,e)});h.addEventListener(a.Constants.EventCode.GameListUpdate,function(b){var b=b.vals[a.Constants.ParameterCode.GameList],f=
[],g=[],i=[],n;for(n in b){var k=d.roomInfos.filter(function(a){return a.name==n});if(0<k.length){var j=k[0];j._updateFromProps(b[n]);j.removed?i.push(j):f.push(j)}else k=new c(n),k._updateFromProps(b[n]),d.roomInfos.push(k),g.push(j)}d.roomInfos=d.roomInfos.filter(function(a){return!a.removed});d.onRoomListUpdate(d.roomInfos,f,g,i);h._logger.debug("ev GameListUpdate:",d.roomInfos,"u:",f,"a:",g,"r:",i,b)});h.addResponseListener(a.Constants.OperationCode.Authenticate,function(e){h._logger.debug("resp Authenticate",
e);e.errCode?(d.changeState(b.State.Error),d.onError(b.PeerErrorCode.MasterAuthenticationFailed,"Master authentication failed")):(h._logger.info("Authenticated"),d.userAuthSecret=e.vals[a.Constants.ParameterCode.Secret],d.changeState(b.State.ConnectedToMaster),e=[],d.connectOptions.lobbyName&&(e.push(a.Constants.ParameterCode.LobbyName),e.push(d.connectOptions.lobbyName),void 0!=d.connectOptions.lobbyType&&(e.push(a.Constants.ParameterCode.LobbyType),e.push(d.connectOptions.lobbyType))),h.sendOperation(a.Constants.OperationCode.JoinLobby,
e),h._logger.info("Join Lobby",d.connectOptions.lobbyName,d.connectOptions.lobbyType,"..."))});h.addResponseListener(a.Constants.OperationCode.JoinLobby,function(e){h._logger.debug("resp JoinLobby",e);e.errCode||(h._logger.info("Joined to Lobby"),d.changeState(b.State.JoinedLobby));d._onOperationResponseInternal2(a.Constants.OperationCode.JoinLobby,e)});h.addResponseListener(a.Constants.OperationCode.CreateGame,function(b){h._logger.debug("resp CreateGame",b);b.errCode||(d.currentRoom._updateFromMasterResponse(b.vals),
h._logger.debug("Created/Joined "+d.currentRoom.name),d.connectToGameServer(a.Constants.OperationCode.CreateGame));d._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,b)});h.addResponseListener(a.Constants.OperationCode.JoinGame,function(b){h._logger.debug("resp JoinGame",b);b.errCode||(d.currentRoom._updateFromMasterResponse(b.vals),h._logger.debug("Joined "+d.currentRoom.name),d.connectToGameServer(a.Constants.OperationCode.JoinGame));d._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,
b)});h.addResponseListener(a.Constants.OperationCode.JoinRandomGame,function(b){h._logger.debug("resp JoinRandomGame",b);b.errCode||(d.currentRoom._updateFromMasterResponse(b.vals),h._logger.debug("Joined "+d.currentRoom.name),d.connectToGameServer(a.Constants.OperationCode.JoinRandomGame));d._onOperationResponseInternal2(a.Constants.OperationCode.JoinRandomGame,b)});h.addResponseListener(a.Constants.OperationCode.FindFriends,function(b){h._logger.debug("resp FindFriends",b);var c={};if(b.errCode)h._logger.error("FindFriends request error:",
b.errCode);else for(var f=b.vals[a.Constants.ParameterCode.FindFriendsResponseOnlineList]||{},g=b.vals[a.Constants.ParameterCode.FindFriendsResponseRoomIdList]||{},i=0;i<d.findFriendsRequestList.length;++i){var k=d.findFriendsRequestList[i];k&&(c[k]={online:f[i],roomId:g[i]})}d.onFindFriendsResult(b.errCode,b.errMsg,c)});h.addResponseListener(a.Constants.OperationCode.LobbyStats,function(b){h._logger.debug("resp LobbyStats",b);var c=[];if(b.errCode)h._logger.error("LobbyStats request error:",b.errCode);
else{var f=b.vals[a.Constants.ParameterCode.LobbyName],g=b.vals[a.Constants.ParameterCode.LobbyType]||{},i=b.vals[a.Constants.ParameterCode.PeerCount]||{},k=b.vals[a.Constants.ParameterCode.GameCount]||{};if(f)for(var j=0;j<f.length;++j)c[j]={lobbyName:f[j],lobbyType:g[j],peerCount:i[j],gameCount:k[j]};else for(j=0;j<d.lobbyStatsRequestList.length;++j)f=d.lobbyStatsRequestList[j],c[j]={lobbyName:f[0],lobbyType:f[1],peerCount:i[j],gameCount:k[j]}}d.onLobbyStats(b.errCode,b.errMsg,c)});h.addEventListener(a.Constants.EventCode.LobbyStats,
function(b){h._logger.debug("ev LobbyStats",b);var c=[],f=b.vals[a.Constants.ParameterCode.LobbyName],g=b.vals[a.Constants.ParameterCode.LobbyType]||{},i=b.vals[a.Constants.ParameterCode.PeerCount]||{},b=b.vals[a.Constants.ParameterCode.GameCount]||{};if(f)for(var k=0;k<f.length;++k)c[k]={lobbyName:f[k],lobbyType:g[k],peerCount:i[k],gameCount:b[k]};d.onLobbyStats(0,"",c)});h.addEventListener(a.Constants.EventCode.AppStats,function(b){h._logger.debug("ev AppStats",b);d.onAppStats(0,"",{peerCount:b.vals[a.Constants.ParameterCode.PeerCount],
masterPeerCount:b.vals[a.Constants.ParameterCode.MasterPeerCount],gameCount:b.vals[a.Constants.ParameterCode.GameCount]})})};b.prototype.connectToGameServer=function(a){this.connectOptions.keepMasterConnection||this.masterPeer.disconnect();return this.checkNextState(b.State.ConnectingToGameserver)?(this.logger.info("Connecting to Game",this.currentRoom.address),this.gamePeer=new p(this,"ws://"+this.currentRoom.address,""),this.initGamePeer(this.gamePeer,a),this.connectOptions.keepMasterConnection||
this.masterPeer.disconnect(),this.gamePeer.connect(),this.changeState(b.State.ConnectingToGameserver),!0):!1};b.prototype.initGamePeer=function(c,d){var e=this;c.setLogLevel(this.logger.getLevel());c.addPeerStatusListener(g.PhotonPeer.StatusCodes.error,function(){e.changeState(b.State.Error);e.onError(b.PeerErrorCode.GameError,"Game peer error")});c.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectFailed,function(){e.changeState(b.State.Error);e.onError(b.PeerErrorCode.GameConnectFailed,"Game peer connect failed: "+
e.currentRoom.address)});c.addPeerStatusListener(g.PhotonPeer.StatusCodes.timeout,function(){e.changeState(b.State.Error);e.onError(b.PeerErrorCode.GameTimeout,"Game peer timeout")});c.addPeerStatusListener(g.PhotonPeer.StatusCodes.connect,function(){c._logger.info("Connected");var b=[];b.push(a.Constants.ParameterCode.ApplicationId);b.push(e.appId);b.push(a.Constants.ParameterCode.AppVersion);b.push(e.appVersion);e.userAuthType!=a.Constants.CustomAuthenticationType.None&&(b.push(a.Constants.ParameterCode.ClientAuthenticationType),
b.push(e.userAuthType),b.push(a.Constants.ParameterCode.Secret),b.push(e.userAuthSecret));e._myActor.name&&(b.push(a.Constants.ParameterCode.UserId),b.push(e._myActor.name));c.sendOperation(a.Constants.OperationCode.Authenticate,b);c._logger.info("Authenticate...")});c.addPeerStatusListener(g.PhotonPeer.StatusCodes.disconnect,function(){for(var a in e.actors)e.onActorLeave(e.actors[a]);e.actors={};e.addActor(e._myActor);c._logger.info("Disconnected");e.masterPeer&&e.masterPeer.isConnected()?e.changeState(b.State.JoinedLobby):
(e.changeState(b.State.Disconnected),e.reconnectPending&&e.connect(e.connectOptions))});c.addPeerStatusListener(g.PhotonPeer.StatusCodes.connectClosed,function(){c._logger.info("Server closed connection");e.changeState(b.State.Error);e.onError(b.PeerErrorCode.MasterConnectClosed,"Game server closed connection")});c.addResponseListener(a.Constants.OperationCode.Authenticate,function(f){c._logger.debug("resp Authenticate",f);f.errCode?(e.changeState(b.State.Error),e.onError(b.PeerErrorCode.GameAuthenticationFailed,
"Game authentication failed")):(c._logger.info("Authenticated"),c._logger.info("Connected"),d==a.Constants.OperationCode.CreateGame?e.createRoomInternal(c,e.createRoomOptions):(f=[],f.push(a.Constants.ParameterCode.RoomName),f.push(e.currentRoom.name),f.push(a.Constants.ParameterCode.Broadcast),f.push(!0),f.push(a.Constants.ParameterCode.PlayerProperties),f.push(e._myActor._getAllProperties()),d==a.Constants.OperationCode.JoinGame&&(e.joinRoomOptions.createIfNotExists&&(f.push(a.Constants.ParameterCode.CreateIfNotExists),
f.push(!0)),e.joinRoomOptions.joinToken&&(f.push(a.Constants.ParameterCode.ActorNr),f.push(parseInt(e.joinRoomOptions.joinToken)))),c.sendOperation(a.Constants.OperationCode.JoinGame,f)),e.changeState(b.State.ConnectedToGameserver))});c.addResponseListener(a.Constants.OperationCode.CreateGame,function(d){c._logger.debug("resp CreateGame",d);d.errCode||(e._myActor._updateMyActorFromResponse(d.vals),c._logger.info("myActor: ",e._myActor),e.currentRoom._updateFromProps(d.vals[a.Constants.ParameterCode.GameProperties]),
e.actors={},e.addActor(e._myActor),e.changeState(b.State.Joined),e.onJoinRoom());e._onOperationResponseInternal2(a.Constants.OperationCode.CreateGame,d)});c.addResponseListener(a.Constants.OperationCode.JoinGame,function(d){c._logger.debug("resp JoinGame",d);if(!d.errCode){e._myActor._updateMyActorFromResponse(d.vals);c._logger.info("myActor: ",e._myActor);e.currentRoom._updateFromProps(d.vals[a.Constants.ParameterCode.GameProperties]);e.actors={};e.addActor(e._myActor);var f=d.vals[a.Constants.ParameterCode.PlayerProperties],
g;for(g in f){var i=e.actorFactoryInternal(f[g][a.Constants.ActorProperties.PlayerName],parseInt(g));i._updateCustomProperties(f[g]);e.addActor(i)}e.changeState(b.State.Joined);e.onJoinRoom()}e._onOperationResponseInternal2(a.Constants.OperationCode.JoinGame,d)});c.addResponseListener(a.Constants.OperationCode.SetProperties,function(b){c._logger.debug("resp SetProperties",b);e._onOperationResponseInternal2(a.Constants.OperationCode.SetProperties,b)});c.addEventListener(a.Constants.EventCode.Join,
function(a){c._logger.debug("ev Join",a);if(i._getActorNrFromResponse(a.vals)===e._myActor.actorNr)e._myActor._updateFromResponse(a.vals),e.addActor(e._myActor);else{var b=e.actorFactoryInternal();b._updateFromResponse(a.vals);e.addActor(b);e.onActorJoin(b)}});c.addEventListener(a.Constants.EventCode.Leave,function(a){c._logger.debug("ev Leave",a);if((a=i._getActorNrFromResponse(a.vals))&&e.actors[a]){var b=e.actors[a];delete e.actors[a];e.onActorLeave(b)}});c.addEventListener(a.Constants.EventCode.PropertiesChanged,
function(b){c._logger.debug("ev PropertiesChanged",b);var d=b.vals[a.Constants.ParameterCode.TargetActorNr];void 0!==d&&0<d?void 0!==e.actors[d]&&(d=e.actors[d],d._updateCustomProperties(b.vals[a.Constants.ParameterCode.Properties]),e.onActorPropertiesChange(d)):(e.currentRoom._updateFromProps(b.vals,b.vals[a.Constants.ParameterCode.Properties]),e.onMyRoomPropertiesChange())})};b.prototype._onOperationResponseInternal2=function(a,b){this.onOperationResponse(b.errCode,b.errMsg,a,b.vals)};b.prototype.initValidNextState=
function(){this.validNextState[b.State.Error]=[b.State.ConnectingToMasterserver];this.validNextState[b.State.Uninitialized]=[b.State.ConnectingToMasterserver];this.validNextState[b.State.Disconnected]=[b.State.ConnectingToMasterserver];this.validNextState[b.State.ConnectedToMaster]=[b.State.JoinedLobby];this.validNextState[b.State.JoinedLobby]=[b.State.ConnectingToGameserver];this.validNextState[b.State.ConnectingToGameserver]=[b.State.ConnectedToGameserver];this.validNextState[b.State.ConnectedToGameserver]=
[b.State.Joined]};b.prototype.checkNextState=function(a,c){"undefined"===typeof c&&(c=!1);var e=this.validNextState[this.state];if((e=e&&0<=e.indexOf(a))||c)return e;throw Error("LoadBalancingPeer checkNextState fail: "+b.StateToName(this.state)+" -> "+b.StateToName(a));};b.StateToName=function(a){return Exitgames.Common.Util.enumValueToName(b.State,a)};b.PeerErrorCode={Ok:0,MasterError:1001,MasterConnectFailed:1002,MasterConnectClosed:1003,MasterTimeout:1004,MasterAuthenticationFailed:1101,GameError:2001,
GameConnectFailed:2002,GameConnectClosed:2003,GameTimeout:2004,GameAuthenticationFailed:2101};b.State={Error:-1,Uninitialized:0,ConnectingToMasterserver:1,ConnectedToMaster:2,JoinedLobby:3,ConnectingToGameserver:4,ConnectedToGameserver:5,Joined:6,Disconnecting:7,Disconnected:8};a.LoadBalancingClient=b;var m,q=g.PhotonPeer,l=function(a,b,c){q.call(this,b,c,"Master");this.client=a};__extends(l,q);l.prototype.onUnhandledEvent=function(b,c){this.client.onEvent(b,c.vals[a.Constants.ParameterCode.CustomEventContent],
c.vals[a.Constants.ParameterCode.ActorNr])};l.prototype.onUnhandledResponse=function(a,b){this.client.onOperationResponse(b.errCode,b.errMsg,a,b.vals)};l.prototype.findFriends=function(b){var c=[];c.push(a.Constants.ParameterCode.FindFriendsRequestList);c.push(b);this.sendOperation(a.Constants.OperationCode.FindFriends,c)};l.prototype.requestLobbyStats=function(b){var c=[];if(b&&0<b.length){for(var e=[],f=[],g=0;g<b.length;++g)e[g]=b[g][0],f[g]=b[g][1];c.push(a.Constants.ParameterCode.LobbyName);
c.push(e);c.push(a.Constants.ParameterCode.LobbyType);c.push(f)}this.sendOperation(a.Constants.OperationCode.LobbyStats,c)};m=l;a.MasterPeer=m;var p,r=g.PhotonPeer,l=function(a,b,c){r.call(this,b,c,"Game");this.client=a};__extends(l,r);l.prototype.onUnhandledEvent=function(b,c){this.client.onEvent(b,c.vals[a.Constants.ParameterCode.CustomEventContent],c.vals[a.Constants.ParameterCode.ActorNr])};l.prototype.onUnhandledResponse=function(a,b){this.client.onOperationResponse(b.errCode,b.errMsg,a,b.vals)};
l.prototype.raiseEvent=function(b,c,e){if(this.client.isJoinedToRoom()){this._logger.debug("raiseEvent",b,c,e);b=[a.Constants.ParameterCode.Code,b,a.Constants.ParameterCode.Data,c];if(e){void 0!=e.receivers&&e.receivers!==a.Constants.ReceiverGroup.Others&&(b.push(a.Constants.ParameterCode.ReceiverGroup),b.push(e.receivers));void 0!=e.cache&&e.cache!==a.Constants.EventCaching.DoNotCache&&(b.push(a.Constants.ParameterCode.Cache),b.push(e.cache));if(void 0!=e.interestGroup)if(this.checkGroupNumber(e.interestGroup))b.push(a.Constants.ParameterCode.Group),
b.push(e.interestGroup);else throw Error("raiseEvent - Group not a number: "+e.interestGroup);void 0!=e.targetActors&&(b.push(a.Constants.ParameterCode.ActorList),b.push(e.targetActors))}this.sendOperation(a.Constants.OperationCode.RaiseEvent,b)}else throw Error("raiseEvent - Not joined!");};l.prototype.changeGroups=function(b,c){var e=[];null!=b&&void 0!=b&&(this.checkGroupArray(b,"groupsToRemove"),e.push(a.Constants.ParameterCode.Remove),e.push(b));null!=c&&void 0!=c&&(this.checkGroupArray(c,"groupsToAdd"),
e.push(a.Constants.ParameterCode.Add),e.push(c));this.sendOperation(a.Constants.OperationCode.ChangeGroups,e)};l.prototype.checkGroupNumber=function(a){return!("number"!=typeof a||isNaN(a)||Infinity===a||-Infinity===a)};l.prototype.checkGroupArray=function(a,b){if(Exitgames.Common.Util.isArray(a))for(var c=0;c<a.length;++c){var f=a[c];if(!this.checkGroupNumber(f))throw Error("changeGroups - "+b+" ("+a+") not an array of numbers: element "+c+" = "+f);}else throw Error("changeGroups - groupsToRemove not an array: "+
a);};p=l;a.GamePeer=p})(Photon||(Photon={}));
